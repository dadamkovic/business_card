ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.chngTop,"ax",%progbits
  19              		.align	1
  20              		.global	chngTop
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	chngTop:
  26              	.LVL0:
  27              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "notes.h"
  26:Core/Src/main.c **** #include "songs.h"
  27:Core/Src/main.c **** #include "usbd_cdc_if.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_TIM3_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** TDef_NotesStatus chngTop(uint32_t top)
  63:Core/Src/main.c **** {
  28              		.loc 1 63 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  64:Core/Src/main.c **** 
  65:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****     __HAL_TIM_SET_AUTORELOAD(&htim3, top);
  33              		.loc 1 69 5 view .LVU1
  34              		.loc 1 69 5 view .LVU2
  35 0000 024B     		ldr	r3, .L2
  36 0002 1A68     		ldr	r2, [r3]
  37 0004 D062     		str	r0, [r2, #44]
  38              		.loc 1 69 5 view .LVU3
  39 0006 D860     		str	r0, [r3, #12]
  40              		.loc 1 69 5 view .LVU4
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****     return NOTES_OK;
  41              		.loc 1 71 5 view .LVU5
  72:Core/Src/main.c **** }
  42              		.loc 1 72 1 is_stmt 0 view .LVU6
  43 0008 0020     		movs	r0, #0
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 3


  44              	.LVL1:
  45              		.loc 1 72 1 view .LVU7
  46              		@ sp needed
  47 000a 7047     		bx	lr
  48              	.L3:
  49              		.align	2
  50              	.L2:
  51 000c 00000000 		.word	htim3
  52              		.cfi_endproc
  53              	.LFE43:
  55              		.section	.text.chngComp,"ax",%progbits
  56              		.align	1
  57              		.global	chngComp
  58              		.syntax unified
  59              		.code	16
  60              		.thumb_func
  62              	chngComp:
  63              	.LVL2:
  64              	.LFB44:
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** TDef_NotesStatus chngComp(uint32_t comp)
  75:Core/Src/main.c **** {
  65              		.loc 1 75 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  76:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_4, comp);
  70              		.loc 1 76 5 view .LVU9
  71 0000 024B     		ldr	r3, .L5
  72 0002 1B68     		ldr	r3, [r3]
  73 0004 1864     		str	r0, [r3, #64]
  77:Core/Src/main.c ****     return NOTES_OK;
  74              		.loc 1 77 5 view .LVU10
  78:Core/Src/main.c **** }
  75              		.loc 1 78 1 is_stmt 0 view .LVU11
  76 0006 0020     		movs	r0, #0
  77              	.LVL3:
  78              		.loc 1 78 1 view .LVU12
  79              		@ sp needed
  80 0008 7047     		bx	lr
  81              	.L6:
  82 000a C046     		.align	2
  83              	.L5:
  84 000c 00000000 		.word	htim3
  85              		.cfi_endproc
  86              	.LFE44:
  88              		.section	.text.outOn,"ax",%progbits
  89              		.align	1
  90              		.global	outOn
  91              		.syntax unified
  92              		.code	16
  93              		.thumb_func
  95              	outOn:
  96              	.LVL4:
  97              	.LFB45:
  79:Core/Src/main.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 4


  80:Core/Src/main.c **** TDef_NotesStatus outOn(uint32_t delay){
  98              		.loc 1 80 39 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		.loc 1 80 39 is_stmt 0 view .LVU14
 103 0000 70B5     		push	{r4, r5, r6, lr}
 104              		.cfi_def_cfa_offset 16
 105              		.cfi_offset 4, -16
 106              		.cfi_offset 5, -12
 107              		.cfi_offset 6, -8
 108              		.cfi_offset 14, -4
 109 0002 0500     		movs	r5, r0
  81:Core/Src/main.c ****     HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 110              		.loc 1 81 5 is_stmt 1 view .LVU15
 111 0004 064C     		ldr	r4, .L8
 112 0006 0C21     		movs	r1, #12
 113 0008 2000     		movs	r0, r4
 114              	.LVL5:
 115              		.loc 1 81 5 is_stmt 0 view .LVU16
 116 000a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 117              	.LVL6:
  82:Core/Src/main.c ****     HAL_Delay(delay);
 118              		.loc 1 82 5 is_stmt 1 view .LVU17
 119 000e 2800     		movs	r0, r5
 120 0010 FFF7FEFF 		bl	HAL_Delay
 121              	.LVL7:
  83:Core/Src/main.c ****     HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_4);
 122              		.loc 1 83 5 view .LVU18
 123 0014 0C21     		movs	r1, #12
 124 0016 2000     		movs	r0, r4
 125 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 126              	.LVL8:
  84:Core/Src/main.c ****     return NOTES_OK;
 127              		.loc 1 84 5 view .LVU19
  85:Core/Src/main.c **** }
 128              		.loc 1 85 1 is_stmt 0 view .LVU20
 129 001c 0020     		movs	r0, #0
 130              		@ sp needed
 131              	.LVL9:
 132              		.loc 1 85 1 view .LVU21
 133 001e 70BD     		pop	{r4, r5, r6, pc}
 134              	.L9:
 135              		.align	2
 136              	.L8:
 137 0020 00000000 		.word	htim3
 138              		.cfi_endproc
 139              	.LFE45:
 141              		.section	.text.outOff,"ax",%progbits
 142              		.align	1
 143              		.global	outOff
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	outOff:
 149              	.LFB46:
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 5


  87:Core/Src/main.c **** TDef_NotesStatus outOff(){
 150              		.loc 1 87 26 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154 0000 10B5     		push	{r4, lr}
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 4, -8
 157              		.cfi_offset 14, -4
  88:Core/Src/main.c ****     HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_4);
 158              		.loc 1 88 5 view .LVU23
 159 0002 0348     		ldr	r0, .L11
 160 0004 0C21     		movs	r1, #12
 161 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 162              	.LVL10:
  89:Core/Src/main.c ****     return NOTES_OK;
 163              		.loc 1 89 5 view .LVU24
  90:Core/Src/main.c **** }
 164              		.loc 1 90 1 is_stmt 0 view .LVU25
 165 000a 0020     		movs	r0, #0
 166              		@ sp needed
 167 000c 10BD     		pop	{r4, pc}
 168              	.L12:
 169 000e C046     		.align	2
 170              	.L11:
 171 0010 00000000 		.word	htim3
 172              		.cfi_endproc
 173              	.LFE46:
 175              		.section	.text.MX_GPIO_Init,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.code	16
 179              		.thumb_func
 181              	MX_GPIO_Init:
 182              	.LFB51:
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** void blinkyLed(uint8_t led_num){
  93:Core/Src/main.c ****     uint8_t led_mod = led_num % 4;
  94:Core/Src/main.c ****     switch(led_mod){
  95:Core/Src/main.c ****         case 0:
  96:Core/Src/main.c ****             HAL_GPIO_TogglePin(LED0_GPIO_Port, LED0_Pin);
  97:Core/Src/main.c ****             break;
  98:Core/Src/main.c ****         case 1:
  99:Core/Src/main.c ****             HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 100:Core/Src/main.c ****             break;
 101:Core/Src/main.c ****         case 2:
 102:Core/Src/main.c ****             HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 103:Core/Src/main.c ****             break;
 104:Core/Src/main.c ****         case 3:
 105:Core/Src/main.c ****             HAL_GPIO_TogglePin(LED3_GPIO_Port, LED3_Pin);
 106:Core/Src/main.c ****         break;
 107:Core/Src/main.c ****     }
 108:Core/Src/main.c ****     return;
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** /* USER CODE END 0 */
 112:Core/Src/main.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 6


 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief  The application entry point.
 115:Core/Src/main.c ****   * @retval int
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** int main(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END 1 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 126:Core/Src/main.c ****   HAL_Init();
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE END Init */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Configure the system clock */
 133:Core/Src/main.c ****   SystemClock_Config();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END SysInit */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Initialize all configured peripherals */
 140:Core/Src/main.c ****   MX_GPIO_Init();
 141:Core/Src/main.c ****   MX_TIM3_Init();
 142:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 143:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 144:Core/Src/main.c ****   
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   setupNotes(chngComp,chngTop,outOn, outOff);
 147:Core/Src/main.c ****   setBeat(200);
 148:Core/Src/main.c ****   HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_4);
 149:Core/Src/main.c ****   
 150:Core/Src/main.c ****   /* USER CODE END 2 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* Infinite loop */
 153:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 154:Core/Src/main.c ****   while (1)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     HAL_Delay(300);
 161:Core/Src/main.c ****     uint8_t song_it = 0;
 162:Core/Src/main.c ****     Enum_Notes song_note;
 163:Core/Src/main.c ****     uint8_t song_beats;
 164:Core/Src/main.c ****     do{
 165:Core/Src/main.c ****         
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****         song_note = ode_to_joy_notes[song_it];
 168:Core/Src/main.c ****         song_beats = ode_to_joy_beats[song_it];
 169:Core/Src/main.c ****         playNote(song_note, 2, song_beats);
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 7


 170:Core/Src/main.c ****         song_it++;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****         blinkyLed((uint8_t) song_note);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     }while(ode_to_joy_beats[song_it] != 0);
 175:Core/Src/main.c ****    
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c ****   /* USER CODE END 3 */
 178:Core/Src/main.c **** }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** /**
 181:Core/Src/main.c ****   * @brief System Clock Configuration
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** void SystemClock_Config(void)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 187:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 188:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 191:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48;
 194:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 205:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     Error_Handler();
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 214:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 224:Core/Src/main.c ****   * @param None
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 8


 227:Core/Src/main.c **** static void MX_TIM3_Init(void)
 228:Core/Src/main.c **** {
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 235:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 236:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 241:Core/Src/main.c ****   htim3.Instance = TIM3;
 242:Core/Src/main.c ****   htim3.Init.Prescaler = 47;
 243:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 244:Core/Src/main.c ****   htim3.Init.Period = 6000;
 245:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 246:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 247:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****     Error_Handler();
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 252:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****     Error_Handler();
 259:Core/Src/main.c ****   }
 260:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 261:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 262:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 267:Core/Src/main.c ****   sConfigOC.Pulse = 3000;
 268:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 269:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 270:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****     Error_Handler();
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c ****   __HAL_TIM_DISABLE_OCxPRELOAD(&htim3, TIM_CHANNEL_4);
 275:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 278:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /**
 283:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 9


 284:Core/Src/main.c ****   * @param None
 285:Core/Src/main.c ****   * @retval None
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c **** static void MX_GPIO_Init(void)
 288:Core/Src/main.c **** {
 183              		.loc 1 288 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 32
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 10B5     		push	{r4, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 4, -8
 190              		.cfi_offset 14, -4
 191 0002 88B0     		sub	sp, sp, #32
 192              		.cfi_def_cfa_offset 40
 289:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 193              		.loc 1 289 3 view .LVU27
 194              		.loc 1 289 20 is_stmt 0 view .LVU28
 195 0004 1422     		movs	r2, #20
 196 0006 0021     		movs	r1, #0
 197 0008 03A8     		add	r0, sp, #12
 198 000a FFF7FEFF 		bl	memset
 199              	.LVL11:
 290:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 291:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 294:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 200              		.loc 1 294 3 is_stmt 1 view .LVU29
 201              	.LBB4:
 202              		.loc 1 294 3 view .LVU30
 203              		.loc 1 294 3 view .LVU31
 204 000e 134B     		ldr	r3, .L14
 205 0010 5A69     		ldr	r2, [r3, #20]
 206 0012 8021     		movs	r1, #128
 207 0014 8902     		lsls	r1, r1, #10
 208 0016 0A43     		orrs	r2, r1
 209 0018 5A61     		str	r2, [r3, #20]
 210              		.loc 1 294 3 view .LVU32
 211 001a 5A69     		ldr	r2, [r3, #20]
 212 001c 0A40     		ands	r2, r1
 213 001e 0192     		str	r2, [sp, #4]
 214              		.loc 1 294 3 view .LVU33
 215 0020 019A     		ldr	r2, [sp, #4]
 216              	.LBE4:
 217              		.loc 1 294 3 view .LVU34
 295:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 218              		.loc 1 295 3 view .LVU35
 219              	.LBB5:
 220              		.loc 1 295 3 view .LVU36
 221              		.loc 1 295 3 view .LVU37
 222 0022 5A69     		ldr	r2, [r3, #20]
 223 0024 8021     		movs	r1, #128
 224 0026 C902     		lsls	r1, r1, #11
 225 0028 0A43     		orrs	r2, r1
 226 002a 5A61     		str	r2, [r3, #20]
 227              		.loc 1 295 3 view .LVU38
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 10


 228 002c 5B69     		ldr	r3, [r3, #20]
 229 002e 0B40     		ands	r3, r1
 230 0030 0293     		str	r3, [sp, #8]
 231              		.loc 1 295 3 view .LVU39
 232 0032 029B     		ldr	r3, [sp, #8]
 233              	.LBE5:
 234              		.loc 1 295 3 view .LVU40
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 298:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LED0_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 235              		.loc 1 298 3 view .LVU41
 236 0034 9024     		movs	r4, #144
 237 0036 E405     		lsls	r4, r4, #23
 238 0038 0022     		movs	r2, #0
 239 003a 1F21     		movs	r1, #31
 240 003c 2000     		movs	r0, r4
 241 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 242              	.LVL12:
 299:Core/Src/main.c ****                           |LED4_Pin, GPIO_PIN_RESET);
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /*Configure GPIO pins : LED0_Pin LED1_Pin LED2_Pin LED3_Pin
 302:Core/Src/main.c ****                            LED4_Pin */
 303:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin|LED2_Pin|LED3_Pin
 243              		.loc 1 303 3 view .LVU42
 244              		.loc 1 303 23 is_stmt 0 view .LVU43
 245 0042 1F23     		movs	r3, #31
 246 0044 0393     		str	r3, [sp, #12]
 304:Core/Src/main.c ****                           |LED4_Pin;
 305:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 247              		.loc 1 305 3 is_stmt 1 view .LVU44
 248              		.loc 1 305 24 is_stmt 0 view .LVU45
 249 0046 1E3B     		subs	r3, r3, #30
 250 0048 0493     		str	r3, [sp, #16]
 306:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 251              		.loc 1 306 3 is_stmt 1 view .LVU46
 252              		.loc 1 306 24 is_stmt 0 view .LVU47
 253 004a 0023     		movs	r3, #0
 254 004c 0593     		str	r3, [sp, #20]
 307:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 255              		.loc 1 307 3 is_stmt 1 view .LVU48
 256              		.loc 1 307 25 is_stmt 0 view .LVU49
 257 004e 0693     		str	r3, [sp, #24]
 308:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 258              		.loc 1 308 3 is_stmt 1 view .LVU50
 259 0050 03A9     		add	r1, sp, #12
 260 0052 2000     		movs	r0, r4
 261 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 262              	.LVL13:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 311:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 312:Core/Src/main.c **** }
 263              		.loc 1 312 1 is_stmt 0 view .LVU51
 264 0058 08B0     		add	sp, sp, #32
 265              		@ sp needed
 266 005a 10BD     		pop	{r4, pc}
 267              	.L15:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 11


 268              		.align	2
 269              	.L14:
 270 005c 00100240 		.word	1073876992
 271              		.cfi_endproc
 272              	.LFE51:
 274              		.section	.text.blinkyLed,"ax",%progbits
 275              		.align	1
 276              		.global	blinkyLed
 277              		.syntax unified
 278              		.code	16
 279              		.thumb_func
 281              	blinkyLed:
 282              	.LVL14:
 283              	.LFB47:
  92:Core/Src/main.c ****     uint8_t led_mod = led_num % 4;
 284              		.loc 1 92 32 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
  92:Core/Src/main.c ****     uint8_t led_mod = led_num % 4;
 288              		.loc 1 92 32 is_stmt 0 view .LVU53
 289 0000 10B5     		push	{r4, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
  93:Core/Src/main.c ****     switch(led_mod){
 293              		.loc 1 93 5 is_stmt 1 view .LVU54
  93:Core/Src/main.c ****     switch(led_mod){
 294              		.loc 1 93 13 is_stmt 0 view .LVU55
 295 0002 0323     		movs	r3, #3
 296 0004 1840     		ands	r0, r3
 297              	.LVL15:
  94:Core/Src/main.c ****         case 0:
 298              		.loc 1 94 5 is_stmt 1 view .LVU56
 299 0006 0228     		cmp	r0, #2
 300 0008 18D0     		beq	.L17
 301 000a 09D8     		bhi	.L18
 302 000c 0028     		cmp	r0, #0
 303 000e 0FD0     		beq	.L19
 304 0010 0128     		cmp	r0, #1
 305 0012 12D1     		bne	.L16
  99:Core/Src/main.c ****             break;
 306              		.loc 1 99 13 view .LVU57
 307 0014 9020     		movs	r0, #144
 308              	.LVL16:
  99:Core/Src/main.c ****             break;
 309              		.loc 1 99 13 is_stmt 0 view .LVU58
 310 0016 0221     		movs	r1, #2
 311 0018 C005     		lsls	r0, r0, #23
 312 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 313              	.LVL17:
 100:Core/Src/main.c ****         case 2:
 314              		.loc 1 100 13 is_stmt 1 view .LVU59
 315 001e 0CE0     		b	.L16
 316              	.LVL18:
 317              	.L18:
  94:Core/Src/main.c ****         case 0:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 12


 318              		.loc 1 94 5 is_stmt 0 view .LVU60
 319 0020 0328     		cmp	r0, #3
 320 0022 0AD1     		bne	.L16
 105:Core/Src/main.c ****         break;
 321              		.loc 1 105 13 is_stmt 1 view .LVU61
 322 0024 9020     		movs	r0, #144
 323              	.LVL19:
 105:Core/Src/main.c ****         break;
 324              		.loc 1 105 13 is_stmt 0 view .LVU62
 325 0026 0821     		movs	r1, #8
 326 0028 C005     		lsls	r0, r0, #23
 327 002a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 328              	.LVL20:
 106:Core/Src/main.c ****     }
 329              		.loc 1 106 9 is_stmt 1 view .LVU63
 108:Core/Src/main.c **** }
 330              		.loc 1 108 5 view .LVU64
 331 002e 04E0     		b	.L16
 332              	.LVL21:
 333              	.L19:
  96:Core/Src/main.c ****             break;
 334              		.loc 1 96 13 view .LVU65
 335 0030 9020     		movs	r0, #144
 336              	.LVL22:
  96:Core/Src/main.c ****             break;
 337              		.loc 1 96 13 is_stmt 0 view .LVU66
 338 0032 0121     		movs	r1, #1
 339 0034 C005     		lsls	r0, r0, #23
 340 0036 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 341              	.LVL23:
  97:Core/Src/main.c ****         case 1:
 342              		.loc 1 97 13 is_stmt 1 view .LVU67
 343              	.L16:
 109:Core/Src/main.c **** 
 344              		.loc 1 109 1 is_stmt 0 view .LVU68
 345              		@ sp needed
 346 003a 10BD     		pop	{r4, pc}
 347              	.LVL24:
 348              	.L17:
 102:Core/Src/main.c ****             break;
 349              		.loc 1 102 13 is_stmt 1 view .LVU69
 350 003c 9020     		movs	r0, #144
 351              	.LVL25:
 102:Core/Src/main.c ****             break;
 352              		.loc 1 102 13 is_stmt 0 view .LVU70
 353 003e 0421     		movs	r1, #4
 354 0040 C005     		lsls	r0, r0, #23
 355 0042 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 356              	.LVL26:
 103:Core/Src/main.c ****         case 3:
 357              		.loc 1 103 13 is_stmt 1 view .LVU71
 358 0046 F8E7     		b	.L16
 359              		.cfi_endproc
 360              	.LFE47:
 362              		.section	.text.Error_Handler,"ax",%progbits
 363              		.align	1
 364              		.global	Error_Handler
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 13


 365              		.syntax unified
 366              		.code	16
 367              		.thumb_func
 369              	Error_Handler:
 370              	.LFB52:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** /* USER CODE END 4 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /**
 319:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 320:Core/Src/main.c ****   * @retval None
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c **** void Error_Handler(void)
 323:Core/Src/main.c **** {
 371              		.loc 1 323 1 view -0
 372              		.cfi_startproc
 373              		@ Volatile: function does not return.
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 324:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 325:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 326:Core/Src/main.c ****   __disable_irq();
 377              		.loc 1 326 3 view .LVU73
 378              	.LBB6:
 379              	.LBI6:
 380              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 14


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 15


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 381              		.loc 2 140 27 view .LVU74
 382              	.LBB7:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 16


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 383              		.loc 2 142 3 view .LVU75
 384              		.syntax divided
 385              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 386 0000 72B6     		cpsid i
 387              	@ 0 "" 2
 388              		.thumb
 389              		.syntax unified
 390              	.L24:
 391              	.LBE7:
 392              	.LBE6:
 327:Core/Src/main.c ****   while (1)
 393              		.loc 1 327 3 discriminator 1 view .LVU76
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****   }
 394              		.loc 1 329 3 discriminator 1 view .LVU77
 327:Core/Src/main.c ****   while (1)
 395              		.loc 1 327 9 discriminator 1 view .LVU78
 396 0002 FEE7     		b	.L24
 397              		.cfi_endproc
 398              	.LFE52:
 400              		.section	.text.MX_TIM3_Init,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.code	16
 404              		.thumb_func
 406              	MX_TIM3_Init:
 407              	.LFB50:
 228:Core/Src/main.c **** 
 408              		.loc 1 228 1 view -0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 56
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412 0000 00B5     		push	{lr}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 14, -4
 415 0002 8FB0     		sub	sp, sp, #60
 416              		.cfi_def_cfa_offset 64
 234:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 417              		.loc 1 234 3 view .LVU80
 234:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 418              		.loc 1 234 26 is_stmt 0 view .LVU81
 419 0004 1022     		movs	r2, #16
 420 0006 0021     		movs	r1, #0
 421 0008 0AA8     		add	r0, sp, #40
 422 000a FFF7FEFF 		bl	memset
 423              	.LVL27:
 235:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 424              		.loc 1 235 3 is_stmt 1 view .LVU82
 235:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 425              		.loc 1 235 27 is_stmt 0 view .LVU83
 426 000e 0822     		movs	r2, #8
 427 0010 0021     		movs	r1, #0
 428 0012 08A8     		add	r0, sp, #32
 429 0014 FFF7FEFF 		bl	memset
 430              	.LVL28:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 17


 236:Core/Src/main.c **** 
 431              		.loc 1 236 3 is_stmt 1 view .LVU84
 236:Core/Src/main.c **** 
 432              		.loc 1 236 22 is_stmt 0 view .LVU85
 433 0018 1C22     		movs	r2, #28
 434 001a 0021     		movs	r1, #0
 435 001c 01A8     		add	r0, sp, #4
 436 001e FFF7FEFF 		bl	memset
 437              	.LVL29:
 241:Core/Src/main.c ****   htim3.Init.Prescaler = 47;
 438              		.loc 1 241 3 is_stmt 1 view .LVU86
 241:Core/Src/main.c ****   htim3.Init.Prescaler = 47;
 439              		.loc 1 241 18 is_stmt 0 view .LVU87
 440 0022 2448     		ldr	r0, .L36
 441 0024 244B     		ldr	r3, .L36+4
 442 0026 0360     		str	r3, [r0]
 242:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 443              		.loc 1 242 3 is_stmt 1 view .LVU88
 242:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 444              		.loc 1 242 24 is_stmt 0 view .LVU89
 445 0028 2F23     		movs	r3, #47
 446 002a 4360     		str	r3, [r0, #4]
 243:Core/Src/main.c ****   htim3.Init.Period = 6000;
 447              		.loc 1 243 3 is_stmt 1 view .LVU90
 243:Core/Src/main.c ****   htim3.Init.Period = 6000;
 448              		.loc 1 243 26 is_stmt 0 view .LVU91
 449 002c 0023     		movs	r3, #0
 450 002e 8360     		str	r3, [r0, #8]
 244:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 451              		.loc 1 244 3 is_stmt 1 view .LVU92
 244:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 452              		.loc 1 244 21 is_stmt 0 view .LVU93
 453 0030 224A     		ldr	r2, .L36+8
 454 0032 C260     		str	r2, [r0, #12]
 245:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 455              		.loc 1 245 3 is_stmt 1 view .LVU94
 245:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 456              		.loc 1 245 28 is_stmt 0 view .LVU95
 457 0034 0361     		str	r3, [r0, #16]
 246:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 458              		.loc 1 246 3 is_stmt 1 view .LVU96
 246:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 459              		.loc 1 246 32 is_stmt 0 view .LVU97
 460 0036 8033     		adds	r3, r3, #128
 461 0038 8361     		str	r3, [r0, #24]
 247:Core/Src/main.c ****   {
 462              		.loc 1 247 3 is_stmt 1 view .LVU98
 247:Core/Src/main.c ****   {
 463              		.loc 1 247 7 is_stmt 0 view .LVU99
 464 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 465              	.LVL30:
 247:Core/Src/main.c ****   {
 466              		.loc 1 247 6 view .LVU100
 467 003e 0028     		cmp	r0, #0
 468 0040 2ED1     		bne	.L31
 251:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 469              		.loc 1 251 3 is_stmt 1 view .LVU101
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 18


 251:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 470              		.loc 1 251 34 is_stmt 0 view .LVU102
 471 0042 8023     		movs	r3, #128
 472 0044 5B01     		lsls	r3, r3, #5
 473 0046 0A93     		str	r3, [sp, #40]
 252:Core/Src/main.c ****   {
 474              		.loc 1 252 3 is_stmt 1 view .LVU103
 252:Core/Src/main.c ****   {
 475              		.loc 1 252 7 is_stmt 0 view .LVU104
 476 0048 1A48     		ldr	r0, .L36
 477 004a 0AA9     		add	r1, sp, #40
 478 004c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 479              	.LVL31:
 252:Core/Src/main.c ****   {
 480              		.loc 1 252 6 view .LVU105
 481 0050 0028     		cmp	r0, #0
 482 0052 27D1     		bne	.L32
 256:Core/Src/main.c ****   {
 483              		.loc 1 256 3 is_stmt 1 view .LVU106
 256:Core/Src/main.c ****   {
 484              		.loc 1 256 7 is_stmt 0 view .LVU107
 485 0054 1748     		ldr	r0, .L36
 486 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 487              	.LVL32:
 256:Core/Src/main.c ****   {
 488              		.loc 1 256 6 view .LVU108
 489 005a 0028     		cmp	r0, #0
 490 005c 24D1     		bne	.L33
 260:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 491              		.loc 1 260 3 is_stmt 1 view .LVU109
 260:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 492              		.loc 1 260 37 is_stmt 0 view .LVU110
 493 005e 0023     		movs	r3, #0
 494 0060 0893     		str	r3, [sp, #32]
 261:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 495              		.loc 1 261 3 is_stmt 1 view .LVU111
 261:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 496              		.loc 1 261 33 is_stmt 0 view .LVU112
 497 0062 0993     		str	r3, [sp, #36]
 262:Core/Src/main.c ****   {
 498              		.loc 1 262 3 is_stmt 1 view .LVU113
 262:Core/Src/main.c ****   {
 499              		.loc 1 262 7 is_stmt 0 view .LVU114
 500 0064 1348     		ldr	r0, .L36
 501 0066 08A9     		add	r1, sp, #32
 502 0068 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 503              	.LVL33:
 262:Core/Src/main.c ****   {
 504              		.loc 1 262 6 view .LVU115
 505 006c 0028     		cmp	r0, #0
 506 006e 1DD1     		bne	.L34
 266:Core/Src/main.c ****   sConfigOC.Pulse = 3000;
 507              		.loc 1 266 3 is_stmt 1 view .LVU116
 266:Core/Src/main.c ****   sConfigOC.Pulse = 3000;
 508              		.loc 1 266 20 is_stmt 0 view .LVU117
 509 0070 6023     		movs	r3, #96
 510 0072 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 19


 267:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 511              		.loc 1 267 3 is_stmt 1 view .LVU118
 267:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 512              		.loc 1 267 19 is_stmt 0 view .LVU119
 513 0074 124B     		ldr	r3, .L36+12
 514 0076 0293     		str	r3, [sp, #8]
 268:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 515              		.loc 1 268 3 is_stmt 1 view .LVU120
 268:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 516              		.loc 1 268 24 is_stmt 0 view .LVU121
 517 0078 0023     		movs	r3, #0
 518 007a 0393     		str	r3, [sp, #12]
 269:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 519              		.loc 1 269 3 is_stmt 1 view .LVU122
 269:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 520              		.loc 1 269 24 is_stmt 0 view .LVU123
 521 007c 0593     		str	r3, [sp, #20]
 270:Core/Src/main.c ****   {
 522              		.loc 1 270 3 is_stmt 1 view .LVU124
 270:Core/Src/main.c ****   {
 523              		.loc 1 270 7 is_stmt 0 view .LVU125
 524 007e 0D48     		ldr	r0, .L36
 525 0080 0C22     		movs	r2, #12
 526 0082 01A9     		add	r1, sp, #4
 527 0084 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 528              	.LVL34:
 270:Core/Src/main.c ****   {
 529              		.loc 1 270 6 view .LVU126
 530 0088 0028     		cmp	r0, #0
 531 008a 11D1     		bne	.L35
 274:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 532              		.loc 1 274 3 is_stmt 1 view .LVU127
 533 008c 0948     		ldr	r0, .L36
 534 008e 0268     		ldr	r2, [r0]
 535 0090 D369     		ldr	r3, [r2, #28]
 536 0092 0C49     		ldr	r1, .L36+16
 537 0094 0B40     		ands	r3, r1
 538 0096 D361     		str	r3, [r2, #28]
 278:Core/Src/main.c **** 
 539              		.loc 1 278 3 view .LVU128
 540 0098 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 541              	.LVL35:
 280:Core/Src/main.c **** 
 542              		.loc 1 280 1 is_stmt 0 view .LVU129
 543 009c 0FB0     		add	sp, sp, #60
 544              		@ sp needed
 545 009e 00BD     		pop	{pc}
 546              	.L31:
 249:Core/Src/main.c ****   }
 547              		.loc 1 249 5 is_stmt 1 view .LVU130
 548 00a0 FFF7FEFF 		bl	Error_Handler
 549              	.LVL36:
 550              	.L32:
 254:Core/Src/main.c ****   }
 551              		.loc 1 254 5 view .LVU131
 552 00a4 FFF7FEFF 		bl	Error_Handler
 553              	.LVL37:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 20


 554              	.L33:
 258:Core/Src/main.c ****   }
 555              		.loc 1 258 5 view .LVU132
 556 00a8 FFF7FEFF 		bl	Error_Handler
 557              	.LVL38:
 558              	.L34:
 264:Core/Src/main.c ****   }
 559              		.loc 1 264 5 view .LVU133
 560 00ac FFF7FEFF 		bl	Error_Handler
 561              	.LVL39:
 562              	.L35:
 272:Core/Src/main.c ****   }
 563              		.loc 1 272 5 view .LVU134
 564 00b0 FFF7FEFF 		bl	Error_Handler
 565              	.LVL40:
 566              	.L37:
 567              		.align	2
 568              	.L36:
 569 00b4 00000000 		.word	htim3
 570 00b8 00040040 		.word	1073742848
 571 00bc 70170000 		.word	6000
 572 00c0 B80B0000 		.word	3000
 573 00c4 FFF7FFFF 		.word	-2049
 574              		.cfi_endproc
 575              	.LFE50:
 577              		.section	.text.SystemClock_Config,"ax",%progbits
 578              		.align	1
 579              		.global	SystemClock_Config
 580              		.syntax unified
 581              		.code	16
 582              		.thumb_func
 584              	SystemClock_Config:
 585              	.LFB49:
 185:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 586              		.loc 1 185 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 96
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 00B5     		push	{lr}
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 14, -4
 593 0002 99B0     		sub	sp, sp, #100
 594              		.cfi_def_cfa_offset 104
 186:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 595              		.loc 1 186 3 view .LVU136
 186:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 596              		.loc 1 186 22 is_stmt 0 view .LVU137
 597 0004 3422     		movs	r2, #52
 598 0006 0021     		movs	r1, #0
 599 0008 0BA8     		add	r0, sp, #44
 600 000a FFF7FEFF 		bl	memset
 601              	.LVL41:
 187:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 602              		.loc 1 187 3 is_stmt 1 view .LVU138
 187:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 603              		.loc 1 187 22 is_stmt 0 view .LVU139
 604 000e 1022     		movs	r2, #16
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 21


 605 0010 0021     		movs	r1, #0
 606 0012 07A8     		add	r0, sp, #28
 607 0014 FFF7FEFF 		bl	memset
 608              	.LVL42:
 188:Core/Src/main.c **** 
 609              		.loc 1 188 3 is_stmt 1 view .LVU140
 188:Core/Src/main.c **** 
 610              		.loc 1 188 28 is_stmt 0 view .LVU141
 611 0018 1822     		movs	r2, #24
 612 001a 0021     		movs	r1, #0
 613 001c 01A8     		add	r0, sp, #4
 614 001e FFF7FEFF 		bl	memset
 615              	.LVL43:
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 616              		.loc 1 193 3 is_stmt 1 view .LVU142
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 617              		.loc 1 193 36 is_stmt 0 view .LVU143
 618 0022 2023     		movs	r3, #32
 619 0024 0B93     		str	r3, [sp, #44]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 620              		.loc 1 194 3 is_stmt 1 view .LVU144
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 621              		.loc 1 194 32 is_stmt 0 view .LVU145
 622 0026 1F3B     		subs	r3, r3, #31
 623 0028 1393     		str	r3, [sp, #76]
 195:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 624              		.loc 1 195 3 is_stmt 1 view .LVU146
 196:Core/Src/main.c ****   {
 625              		.loc 1 196 3 view .LVU147
 196:Core/Src/main.c ****   {
 626              		.loc 1 196 7 is_stmt 0 view .LVU148
 627 002a 0BA8     		add	r0, sp, #44
 628 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 629              	.LVL44:
 196:Core/Src/main.c ****   {
 630              		.loc 1 196 6 view .LVU149
 631 0030 0028     		cmp	r0, #0
 632 0032 18D1     		bne	.L42
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 633              		.loc 1 203 3 is_stmt 1 view .LVU150
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 634              		.loc 1 203 31 is_stmt 0 view .LVU151
 635 0034 0723     		movs	r3, #7
 636 0036 0793     		str	r3, [sp, #28]
 205:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 637              		.loc 1 205 3 is_stmt 1 view .LVU152
 205:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 638              		.loc 1 205 34 is_stmt 0 view .LVU153
 639 0038 043B     		subs	r3, r3, #4
 640 003a 0893     		str	r3, [sp, #32]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 641              		.loc 1 206 3 is_stmt 1 view .LVU154
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 642              		.loc 1 206 35 is_stmt 0 view .LVU155
 643 003c 0023     		movs	r3, #0
 644 003e 0993     		str	r3, [sp, #36]
 207:Core/Src/main.c **** 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 22


 645              		.loc 1 207 3 is_stmt 1 view .LVU156
 207:Core/Src/main.c **** 
 646              		.loc 1 207 36 is_stmt 0 view .LVU157
 647 0040 0A93     		str	r3, [sp, #40]
 209:Core/Src/main.c ****   {
 648              		.loc 1 209 3 is_stmt 1 view .LVU158
 209:Core/Src/main.c ****   {
 649              		.loc 1 209 7 is_stmt 0 view .LVU159
 650 0042 0121     		movs	r1, #1
 651 0044 07A8     		add	r0, sp, #28
 652 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 653              	.LVL45:
 209:Core/Src/main.c ****   {
 654              		.loc 1 209 6 view .LVU160
 655 004a 0028     		cmp	r0, #0
 656 004c 0DD1     		bne	.L43
 213:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 657              		.loc 1 213 3 is_stmt 1 view .LVU161
 213:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 658              		.loc 1 213 38 is_stmt 0 view .LVU162
 659 004e 8023     		movs	r3, #128
 660 0050 9B02     		lsls	r3, r3, #10
 661 0052 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c **** 
 662              		.loc 1 214 3 is_stmt 1 view .LVU163
 214:Core/Src/main.c **** 
 663              		.loc 1 214 35 is_stmt 0 view .LVU164
 664 0054 0023     		movs	r3, #0
 665 0056 0693     		str	r3, [sp, #24]
 216:Core/Src/main.c ****   {
 666              		.loc 1 216 3 is_stmt 1 view .LVU165
 216:Core/Src/main.c ****   {
 667              		.loc 1 216 7 is_stmt 0 view .LVU166
 668 0058 01A8     		add	r0, sp, #4
 669 005a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 670              	.LVL46:
 216:Core/Src/main.c ****   {
 671              		.loc 1 216 6 view .LVU167
 672 005e 0028     		cmp	r0, #0
 673 0060 05D1     		bne	.L44
 220:Core/Src/main.c **** 
 674              		.loc 1 220 1 view .LVU168
 675 0062 19B0     		add	sp, sp, #100
 676              		@ sp needed
 677 0064 00BD     		pop	{pc}
 678              	.L42:
 198:Core/Src/main.c ****   }
 679              		.loc 1 198 5 is_stmt 1 view .LVU169
 680 0066 FFF7FEFF 		bl	Error_Handler
 681              	.LVL47:
 682              	.L43:
 211:Core/Src/main.c ****   }
 683              		.loc 1 211 5 view .LVU170
 684 006a FFF7FEFF 		bl	Error_Handler
 685              	.LVL48:
 686              	.L44:
 218:Core/Src/main.c ****   }
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 23


 687              		.loc 1 218 5 view .LVU171
 688 006e FFF7FEFF 		bl	Error_Handler
 689              	.LVL49:
 690              		.cfi_endproc
 691              	.LFE49:
 693              		.section	.text.main,"ax",%progbits
 694              		.align	1
 695              		.global	main
 696              		.syntax unified
 697              		.code	16
 698              		.thumb_func
 700              	main:
 701              	.LFB48:
 118:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 702              		.loc 1 118 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706 0000 70B5     		push	{r4, r5, r6, lr}
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 4, -16
 709              		.cfi_offset 5, -12
 710              		.cfi_offset 6, -8
 711              		.cfi_offset 14, -4
 126:Core/Src/main.c **** 
 712              		.loc 1 126 3 view .LVU173
 713 0002 FFF7FEFF 		bl	HAL_Init
 714              	.LVL50:
 133:Core/Src/main.c **** 
 715              		.loc 1 133 3 view .LVU174
 716 0006 FFF7FEFF 		bl	SystemClock_Config
 717              	.LVL51:
 140:Core/Src/main.c ****   MX_TIM3_Init();
 718              		.loc 1 140 3 view .LVU175
 719 000a FFF7FEFF 		bl	MX_GPIO_Init
 720              	.LVL52:
 141:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 721              		.loc 1 141 3 view .LVU176
 722 000e FFF7FEFF 		bl	MX_TIM3_Init
 723              	.LVL53:
 142:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 724              		.loc 1 142 3 view .LVU177
 725 0012 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 726              	.LVL54:
 146:Core/Src/main.c ****   setBeat(200);
 727              		.loc 1 146 3 view .LVU178
 728 0016 114B     		ldr	r3, .L48
 729 0018 114A     		ldr	r2, .L48+4
 730 001a 1249     		ldr	r1, .L48+8
 731 001c 1248     		ldr	r0, .L48+12
 732 001e FFF7FEFF 		bl	setupNotes
 733              	.LVL55:
 147:Core/Src/main.c ****   HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_4);
 734              		.loc 1 147 3 view .LVU179
 735 0022 C820     		movs	r0, #200
 736 0024 FFF7FEFF 		bl	setBeat
 737              	.LVL56:
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 24


 148:Core/Src/main.c ****   
 738              		.loc 1 148 3 view .LVU180
 739 0028 1048     		ldr	r0, .L48+16
 740 002a 0C21     		movs	r1, #12
 741 002c FFF7FEFF 		bl	HAL_TIM_PWM_Stop
 742              	.LVL57:
 743              	.L47:
 154:Core/Src/main.c ****   {
 744              		.loc 1 154 3 view .LVU181
 745              	.LBB8:
 160:Core/Src/main.c ****     uint8_t song_it = 0;
 746              		.loc 1 160 5 view .LVU182
 747 0030 9620     		movs	r0, #150
 748 0032 4000     		lsls	r0, r0, #1
 749 0034 FFF7FEFF 		bl	HAL_Delay
 750              	.LVL58:
 161:Core/Src/main.c ****     Enum_Notes song_note;
 751              		.loc 1 161 5 view .LVU183
 161:Core/Src/main.c ****     Enum_Notes song_note;
 752              		.loc 1 161 13 is_stmt 0 view .LVU184
 753 0038 0024     		movs	r4, #0
 754              	.LVL59:
 755              	.L46:
 162:Core/Src/main.c ****     uint8_t song_beats;
 756              		.loc 1 162 5 is_stmt 1 discriminator 1 view .LVU185
 163:Core/Src/main.c ****     do{
 757              		.loc 1 163 5 discriminator 1 view .LVU186
 164:Core/Src/main.c ****         
 758              		.loc 1 164 5 discriminator 1 view .LVU187
 167:Core/Src/main.c ****         song_beats = ode_to_joy_beats[song_it];
 759              		.loc 1 167 9 discriminator 1 view .LVU188
 167:Core/Src/main.c ****         song_beats = ode_to_joy_beats[song_it];
 760              		.loc 1 167 19 is_stmt 0 discriminator 1 view .LVU189
 761 003a 0D4B     		ldr	r3, .L48+20
 762 003c 1E5D     		ldrb	r6, [r3, r4]
 763              	.LVL60:
 168:Core/Src/main.c ****         playNote(song_note, 2, song_beats);
 764              		.loc 1 168 9 is_stmt 1 discriminator 1 view .LVU190
 168:Core/Src/main.c ****         playNote(song_note, 2, song_beats);
 765              		.loc 1 168 20 is_stmt 0 discriminator 1 view .LVU191
 766 003e 0D4D     		ldr	r5, .L48+24
 767 0040 2A5D     		ldrb	r2, [r5, r4]
 768              	.LVL61:
 169:Core/Src/main.c ****         song_it++;
 769              		.loc 1 169 9 is_stmt 1 discriminator 1 view .LVU192
 770 0042 0221     		movs	r1, #2
 771 0044 3000     		movs	r0, r6
 772 0046 FFF7FEFF 		bl	playNote
 773              	.LVL62:
 170:Core/Src/main.c **** 
 774              		.loc 1 170 9 discriminator 1 view .LVU193
 170:Core/Src/main.c **** 
 775              		.loc 1 170 16 is_stmt 0 discriminator 1 view .LVU194
 776 004a 0134     		adds	r4, r4, #1
 777              	.LVL63:
 170:Core/Src/main.c **** 
 778              		.loc 1 170 16 discriminator 1 view .LVU195
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 25


 779 004c E4B2     		uxtb	r4, r4
 780              	.LVL64:
 172:Core/Src/main.c **** 
 781              		.loc 1 172 9 is_stmt 1 discriminator 1 view .LVU196
 782 004e 3000     		movs	r0, r6
 783 0050 FFF7FEFF 		bl	blinkyLed
 784              	.LVL65:
 174:Core/Src/main.c ****    
 785              		.loc 1 174 38 discriminator 1 view .LVU197
 174:Core/Src/main.c ****    
 786              		.loc 1 174 28 is_stmt 0 discriminator 1 view .LVU198
 787 0054 2B5D     		ldrb	r3, [r5, r4]
 174:Core/Src/main.c ****    
 788              		.loc 1 174 38 discriminator 1 view .LVU199
 789 0056 002B     		cmp	r3, #0
 790 0058 EFD1     		bne	.L46
 791 005a E9E7     		b	.L47
 792              	.L49:
 793              		.align	2
 794              	.L48:
 795 005c 00000000 		.word	outOff
 796 0060 00000000 		.word	outOn
 797 0064 00000000 		.word	chngTop
 798 0068 00000000 		.word	chngComp
 799 006c 00000000 		.word	htim3
 800 0070 00000000 		.word	ode_to_joy_notes
 801 0074 00000000 		.word	ode_to_joy_beats
 802              	.LBE8:
 803              		.cfi_endproc
 804              	.LFE48:
 806              		.global	htim3
 807              		.section	.bss.htim3,"aw",%nobits
 808              		.align	2
 811              	htim3:
 812 0000 00000000 		.space	72
 812      00000000 
 812      00000000 
 812      00000000 
 812      00000000 
 813              		.global	ode_to_joy_beats
 814              		.section	.data.ode_to_joy_beats,"aw"
 815              		.align	2
 818              	ode_to_joy_beats:
 819 0000 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\001\001\001"
 819      01010101 
 819      01010101 
 819      01
 820 000d 01020101 		.ascii	"\001\002\001\001\001\001\001\001\001\001\001\001\001"
 820      01010101 
 820      01010101 
 820      01
 821 001a 01010102 		.ascii	"\001\001\001\002\001\001\001\001\001\001\001\001\001"
 821      01010101 
 821      01010101 
 821      01
 822 0027 01010101 		.ascii	"\001\001\001\001\001\002\001\001\001\001\001\001\001"
 822      01020101 
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 26


 822      01010101 
 822      01
 823 0034 01010101 		.ascii	"\001\001\001\001\001\001\001\002\000"
 823      01010102 
 823      00
 824              		.global	ode_to_joy_notes
 825              		.section	.data.ode_to_joy_notes,"aw"
 826              		.align	2
 829              	ode_to_joy_notes:
 830 0000 04       		.byte	4
 831 0001 04       		.byte	4
 832 0002 05       		.byte	5
 833 0003 07       		.byte	7
 834 0004 07       		.byte	7
 835 0005 05       		.byte	5
 836 0006 04       		.byte	4
 837 0007 02       		.byte	2
 838 0008 00       		.byte	0
 839 0009 00       		.byte	0
 840 000a 02       		.byte	2
 841 000b 04       		.byte	4
 842 000c 04       		.byte	4
 843 000d 02       		.byte	2
 844 000e 02       		.byte	2
 845 000f 04       		.byte	4
 846 0010 04       		.byte	4
 847 0011 05       		.byte	5
 848 0012 07       		.byte	7
 849 0013 07       		.byte	7
 850 0014 05       		.byte	5
 851 0015 04       		.byte	4
 852 0016 02       		.byte	2
 853 0017 00       		.byte	0
 854 0018 00       		.byte	0
 855 0019 02       		.byte	2
 856 001a 04       		.byte	4
 857 001b 02       		.byte	2
 858 001c 00       		.byte	0
 859 001d 00       		.byte	0
 860 001e 02       		.byte	2
 861 001f 02       		.byte	2
 862 0020 04       		.byte	4
 863 0021 00       		.byte	0
 864 0022 02       		.byte	2
 865 0023 05       		.byte	5
 866 0024 04       		.byte	4
 867 0025 00       		.byte	0
 868 0026 02       		.byte	2
 869 0027 05       		.byte	5
 870 0028 04       		.byte	4
 871 0029 02       		.byte	2
 872 002a 00       		.byte	0
 873 002b 02       		.byte	2
 874 002c 07       		.byte	7
 875 002d 04       		.byte	4
 876 002e 04       		.byte	4
 877 002f 05       		.byte	5
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 27


 878 0030 07       		.byte	7
 879 0031 07       		.byte	7
 880 0032 05       		.byte	5
 881 0033 04       		.byte	4
 882 0034 02       		.byte	2
 883 0035 00       		.byte	0
 884 0036 00       		.byte	0
 885 0037 02       		.byte	2
 886 0038 04       		.byte	4
 887 0039 02       		.byte	2
 888 003a 00       		.byte	0
 889 003b 00       		.byte	0
 890              		.global	jingle_bells_beats
 891              		.section	.data.jingle_bells_beats,"aw"
 892              		.align	2
 895              	jingle_bells_beats:
 896 0000 01010201 		.ascii	"\001\001\002\001\001\002\001\001\001\001\002\001\001"
 896      01020101 
 896      01010201 
 896      01
 897 000d 01010101 		.ascii	"\001\001\001\001\001\001\001\001\001\001\002\002\000"
 897      01010101 
 897      01010202 
 897      00
 898              		.global	jingle_bells_notes
 899              		.section	.data.jingle_bells_notes,"aw"
 900              		.align	2
 903              	jingle_bells_notes:
 904 0000 04       		.byte	4
 905 0001 04       		.byte	4
 906 0002 04       		.byte	4
 907 0003 04       		.byte	4
 908 0004 04       		.byte	4
 909 0005 04       		.byte	4
 910 0006 04       		.byte	4
 911 0007 07       		.byte	7
 912 0008 00       		.byte	0
 913 0009 02       		.byte	2
 914 000a 04       		.byte	4
 915 000b 05       		.byte	5
 916 000c 05       		.byte	5
 917 000d 05       		.byte	5
 918 000e 05       		.byte	5
 919 000f 05       		.byte	5
 920 0010 04       		.byte	4
 921 0011 04       		.byte	4
 922 0012 04       		.byte	4
 923 0013 04       		.byte	4
 924 0014 02       		.byte	2
 925 0015 02       		.byte	2
 926 0016 04       		.byte	4
 927 0017 02       		.byte	2
 928 0018 07       		.byte	7
 929              		.text
 930              	.Letext0:
 931              		.file 3 "c:\\users\\daniel\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 932              		.file 4 "c:\\users\\daniel\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 28


 933              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 934              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 935              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 936              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 937              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 938              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 939              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 940              		.file 12 "Core/Lib/Notes/Inc/notes.h"
 941              		.file 13 "Core/Lib/Notes/Inc/songs.h"
 942              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 943              		.file 15 "Core/Inc/main.h"
 944              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 945              		.file 17 "USB_DEVICE/App/usb_device.h"
 946              		.file 18 "<built-in>"
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:19     .text.chngTop:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:25     .text.chngTop:00000000 chngTop
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:51     .text.chngTop:0000000c $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:811    .bss.htim3:00000000 htim3
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:56     .text.chngComp:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:62     .text.chngComp:00000000 chngComp
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:84     .text.chngComp:0000000c $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:89     .text.outOn:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:95     .text.outOn:00000000 outOn
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:137    .text.outOn:00000020 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:142    .text.outOff:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:148    .text.outOff:00000000 outOff
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:171    .text.outOff:00000010 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:176    .text.MX_GPIO_Init:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:181    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:270    .text.MX_GPIO_Init:0000005c $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:275    .text.blinkyLed:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:281    .text.blinkyLed:00000000 blinkyLed
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:363    .text.Error_Handler:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:369    .text.Error_Handler:00000000 Error_Handler
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:401    .text.MX_TIM3_Init:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:406    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:569    .text.MX_TIM3_Init:000000b4 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:578    .text.SystemClock_Config:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:584    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:694    .text.main:00000000 $t
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:700    .text.main:00000000 main
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:795    .text.main:0000005c $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:829    .data.ode_to_joy_notes:00000000 ode_to_joy_notes
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:818    .data.ode_to_joy_beats:00000000 ode_to_joy_beats
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:808    .bss.htim3:00000000 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:815    .data.ode_to_joy_beats:00000000 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:826    .data.ode_to_joy_notes:00000000 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:895    .data.jingle_bells_beats:00000000 jingle_bells_beats
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:892    .data.jingle_bells_beats:00000000 $d
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:903    .data.jingle_bells_notes:00000000 jingle_bells_notes
C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s:900    .data.jingle_bells_notes:00000000 $d

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
HAL_Delay
HAL_TIM_PWM_Stop
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
ARM GAS  C:\Users\Daniel\AppData\Local\Temp\ccN8XEPn.s 			page 30


HAL_Init
MX_USB_DEVICE_Init
setupNotes
setBeat
playNote
